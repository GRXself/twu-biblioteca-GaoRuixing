1. Who checked out the book 'The Hobbitâ€™?

Anand Beck

SELECT member.name FROM book, member, checkout_item
WHERE book.id = checkout_item.book_id AND
member.id = checkout_item.member_id AND
book.title = 'The Hobbit';

2. How many people have not checked out anything?

37

SELECT COUNT(id) FROM member
WHERE member.id NOT IN (
	SELECT member.id
	FROM member, checkout_item
	WHERE member.id = checkout_item.member_id
);

3. What books and movies aren't checked out?

Books:
Fellowship of the Ring
1984
Tom Sawyer
Catcher in the Rye
To Kill a Mockingbird
Domain Driven Design

SELECT title FROM book
WHERE book.id NOT IN (
	SELECT book.id
	FROM book, checkout_item
	WHERE book.id = checkout_item.book_id
);

Movies:
Thin Red Line
Crouching Tiger, Hidden Dragon
Lawrence of Arabia
Office Space

SELECT title FROM movie
WHERE movie.id NOT IN (
	SELECT movie.id
	FROM movie, checkout_item
	WHERE movie.id = checkout_item.movie_id
);


4. Add the book 'The Pragmatic Programmer', and add yourself as a member. Check out 'The Pragmatic Programmer'. Use your query from question 1 to verify that you have checked it out. Also, provide the SQL used to update the database.

INSERT INTO book(
id, title)
VALUES(
11, "The Pragmatic Programmer"
);

INSERT INTO member(
id, name)
VALUES(
43, "Gao Ruixing"
);

INSERT INTO checkout_item(
member_id, book_id)
VALUES(
43, 11
);

SELECT member.name FROM book, member, checkout_item
WHERE book.id = checkout_item.book_id AND
member.id = checkout_item.member_id AND
book.title = 'The Pragmatic Programmer';

5. Who has checked out more than 1 item? 

Anand Beck
Frank Smith

SELECT name FROM member
WHERE member.id IN (
	SELECT member_id FROM checkout_item
	GROUP BY member_id
	HAVING COUNT(member_id) > 1
);

or:

SELECT name FROM member
WHERE id IN (
	SELECT member_id
	FROM(
		SELECT COUNT(member_id) AS item_count, member_id FROM checkout_item
		GROUP BY member_id
	)
	WHERE item_count > 1
);